# Set the worker processes based on your server's resources
worker_processes auto;

# Configure the error log path
error_log /var/log/nginx/error.log;

# Set the user and group to run Nginx
user nginx;
group nginx;

# Set the maximum number of open files for Nginx
worker_rlimit_nofile 1024;

# Enable HTTP/2 if supported by the client
http {
  # ...

  server {
    listen 80;
    server_name example.com;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    server_name example.com;

    # SSL/TLS configuration
    ssl_certificate /path/to/ssl_certificate.crt;
    ssl_certificate_key /path/to/ssl_certificate.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    # Set security headers
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:; style-src 'self' 'unsafe-inline';";

    # Block access to hidden files and directories
    location ~ /\. {
      deny all;
    }

    # Block access to sensitive files
    location ~* \.(htaccess|htpasswd|ini|log|sh|config|bak|sql)$ {
      deny all;
    }

    # Block access to PHP files in specific directories
    location ~ /(wp-admin|phpmyadmin|admin) {
      location ~ \.php$ {
        deny all;
      }
    }

    # Block access to common vulnerable PHP files
    location ~* (wp-config\.php|configuration\.php|config\.php|settings\.php|admin\.php) {
      deny all;
    }

    # Block access to sensitive files and directories
    location ~* (database\.sql|backup\.zip|\.git) {
      deny all;
    }

    # Block access to shell and execution-related files
    location ~* \.(php|php3|php4|php5|phtml|pl|py|cgi|exe|sh|bash)$ {
      deny all;
    }

    # Block access to dangerous user agents
    if ($http_user_agent ~* (curl|wget|libwww-perl|python|nikto|sqlmap|acunetix|netsparker)) {
      return 403;
    }
    proxy_pass http://backend_server;
  } 
}
